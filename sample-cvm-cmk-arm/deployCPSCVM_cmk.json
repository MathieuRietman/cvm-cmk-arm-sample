
{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of the VM."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DC2as_v5",
            "allowedValues": [
                "Standard_DC2as_v5",
                "Standard_DC4as_v5",
                "Standard_DC8as_v5",
                "Standard_DC16as_v5",
                "Standard_DC32as_v5",
                "Standard_DC48as_v5",
                "Standard_DC64as_v5",
                "Standard_DC96as_v5",
                "Standard_DC2ads_v5",
                "Standard_DC4ads_v5",
                "Standard_DC8ads_v5",
                "Standard_DC16ads_v5",
                "Standard_DC32ads_v5",
                "Standard_DC48ads_v5",
                "Standard_DC64ads_v5",
                "Standard_DC96ads_v5",
                "Standard_EC2as_v5",
                "Standard_EC4as_v5",
                "Standard_EC8as_v5",
                "Standard_EC16as_v5",
                "Standard_EC20as_v5",
                "Standard_EC32as_v5",
                "Standard_EC48as_v5",
                "Standard_EC64as_v5",
                "Standard_EC96as_v5",
                "Standard_EC96ias_v5",
                "Standard_EC2ads_v5",
                "Standard_EC4ads_v5",
                "Standard_EC8ads_v5",
                "Standard_EC16ads_v5",
                "Standard_EC20ads_v5",
                "Standard_EC32ads_v5",
                "Standard_EC48ads_v5",
                "Standard_EC64ads_v5",
                "Standard_EC96ads_v5",
                "Standard_EC96iads_v5"
            ],
            "metadata": {
                "description": "Size of the VM."
            }
        },
        "vnetNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Determines whether or not a new virtual network should be provisioned"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "(none)",
            "metadata": {
                "description": "Name of the existing VNET"
            }
        },
        "virtualNetworkResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Name of the existing VNET resource group"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "subnet-1",
            "metadata": {
                "description": "Name of the subnet in the virtual network you want to use"
            }
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.1.16.0/24",
            "metadata": {
                "description": "VNET address space"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.1.16.0/24",
            "metadata": {
                "description": "Sets the subnet of the VM."
            }
        },
        "osImageName": {
            "type": "string",
            "defaultValue": "Windows Server 2022 Gen 2",
            "allowedValues": [
                "Windows Server 2022 Gen 2",
                "Windows Server 2019 Gen 2",
                "Ubuntu 20.04 LTS Gen 2"
            ],
            "metadata": {
                "description": "OS Image for the Virtual Machine"
            }
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS",
                "StandardSSD_LRS"
            ],
            "metadata": {
                "description": "OS disk type of the VM."
            }
        },
        "osDiskDeleteOption": {
            "type": "String",
            "defaultValue": "Delete"
        },
        "diskEncryptionSetId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Disk encryption set Id for CVM provisioning with CMK."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin user name of the VM."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "Password or ssh key for the Virtual Machine."
            }
        },
        "bootDiagnostics": {
            "type": "string",
            "defaultValue": "false",
            "allowedValues": [
                "true",
                "false"
            ],
            "metadata": {
                "description": "Boot diagnostics setting of the VM."
            }
        },
         "patchMode": {
            "type": "String",
             "defaultValue": "AutomaticByOS"
        },
        "enableHotpatching": {
            "type": "Bool",
            "defaultValue": false
        },
        "securityType": {
            "type": "string",
            "defaultValue": "DiskWithVMGuestState",
            "allowedValues": [
                "VMGuestStateOnly",
                "DiskWithVMGuestState"
            ],
            "metadata": {
                "description": "VM security type."
            }
        },
        "secureBootEnabled": {
            "type": "string",
            "defaultValue": "true",
            "allowedValues": [
                "true",
                "false"
            ],
            "metadata": {
                "description": "Secure Boot setting of the VM."
            }
        },
        "parMaaEndpoint": {
              "defaultValue": "https://sharedweu.weu.attest.azure.net/",	
              "allowedValues": [
                "https://sharedcus.cus.attest.azure.net/",
                "https://sharedcae.cae.attest.azure.net/",
                "https://sharedeus2.eus2.attest.azure.net/",
                "https://shareduks.uks.attest.azure.net/",
                "https://sharedcac.cac.attest.azure.net/",
                "https://sharedukw.ukw.attest.azure.net/",
                "https://sharedneu.neu.attest.azure.net/",
                "https://sharedeus.eus.attest.azure.net/",
                "https://sharedeau.eau.attest.azure.net/",
                "https://sharedncus.ncus.attest.azure.net/",
                "https://sharedwus.wus.attest.azure.net/",
                "https://sharedweu.weu.attest.azure.net/",
                "https://sharedscus.scus.attest.azure.net/",
                "https://sharedsasia.sasia.attest.azure.net/",
                "https://sharedsau.sau.attest.azure.net/"
            ],
            "type": "String",
            "metadata": {
                "description": "MAA Endpoint to attest to."
            }
        },
        "parVmkeyId": {
            "type": "String",
            "metadata": {
                "description": "Virtual Machine Key Id"
            }
        },
        "parKeyVaultName": {
            "type": "String",
            "metadata": {
                "description": "Key vault name"
            }
        }

        
    },
    "variables": {
        "imageList": {
            "Windows Server 2022 Gen 2": {
                "publisher": "microsoftwindowsserver",
                "offer": "windowsserver",
                "sku": "2022-datacenter-smalldisk-g2",
                "version": "latest"
            },
            "Windows Server 2019 Gen 2": {
                "publisher": "microsoftwindowsserver",
                "offer": "windowsserver",
                "sku": "2019-datacenter-smalldisk-g2",
                "version": "latest"
            },
            "Ubuntu 20.04 LTS Gen 2": {
                "publisher": "Canonical",
                "offer": "0001-com-ubuntu-confidential-vm-focal",
                "sku": "20_04-lts-cvm",
                "version": "latest"
            }
        },
        "imageReference": "[variables('imageList')[parameters('osImageName')]]",
        "networkInterfaceName": "[concat(parameters('vmName'), '-nic')]",
        "publicIPAddressName": "[concat(parameters('vmName'), '-ip')]",
        "networkSecurityGroupName": "[concat(parameters('vmName'), '-nsg')]",
        "networkSecurityGroupId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "virtualNetworkName": "[if(equals(parameters('virtualNetworkName'), '(none)'), concat(parameters('vmName'), '-vnet'), parameters('virtualNetworkName'))]",
        "virtualNetworkId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRefExisting": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'),  parameters('subnetName'))]",
        "subnetName": "[concat(parameters('vmName'), '-sub')]",
        "subnetRefNew": "[concat(variables('virtualNetworkId'), '/subnets/', variables('subnetName'))]",
        "subnetRef": "[if(equals(parameters('vnetNewOrExisting'), 'new'), variables('subnetRefNew'), variables('subnetRefExisting'))]",
        "isWindows": "[contains(parameters('osImageName'), 'Windows')]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
                "publicKeys": [
                    {
                        "keyData": "[parameters('adminPasswordOrKey')]",
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]"
                    }
                ]
            }
        },
        "windowsConfiguration": {
            "enableAutomaticUpdates": "true",
            "provisionVmAgent": "true",
            "patchSettings": {
                    "enableHotpatching": "[parameters('enableHotpatching')]",
                    "patchMode": "[parameters('patchMode')]"
                }
        },
        "varAscReportingEndpoint": "https://sharedeus2.eus2.attest.azure.net/",
        "varDisableAlerts": "false",
        "varExtensionName": "GuestAttestation",
        "varExtensionPublisher": "[if(variables('varIsWindows'), 'Microsoft.Azure.Security.WindowsAttestation', 'Microsoft.Azure.Security.LinuxAttestation')]",
        "varExtensionVersion": "1.0",
        "varMaaTenantName": "GuestAttestation",
        "varUseAlternateToken": "false",
        "varIsWindows": "[contains(parameters('osImageName'), 'Windows')]",
        "varEncryptionOperation": "EnableEncryption",
        "varKeyEncryptionAlgorithm": "RSA-OAEP",
        "varKeyVaultResourceID": "[resourceId(resourceGroup().name, 'Microsoft.KeyVault/vaults/', parameters('parKeyVaultName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "[if(variables('isWindows'), 'RDP', 'SSH')]",
                        "properties": {
                            "priority": 100,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[if(variables('isWindows'), '3389', '22')]"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('networkSecurityGroupId')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[variables('networkSecurityGroupId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('networkSecurityGroupId')]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfigNode",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('networkSecurityGroupId')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "name": "[parameters('vmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]",
                            "securityProfile": {
                                "securityEncryptionType": "[parameters('securityType')]",
                                "diskEncryptionSet": {
                                    "id": "[parameters('diskEncryptionSetId')]"
                                }
                            }
                        },
                        "deleteOption": "[parameters('osDiskDeleteOption')]"
                    },
                    "imageReference": "[variables('imageReference')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]",
                    "windowsConfiguration": "[if(variables('isWindows'), variables('windowsConfiguration'), json('null'))]"
                },
                "securityProfile": {
                    "uefiSettings": {
                        "secureBootEnabled": "[parameters('secureBootEnabled')]",
                        "vTpmEnabled": true
                    },
                    "encryptionAtHost": true,
                    "securityType": "ConfidentialVM"
                }
            }
        },
        // deploy extensions@2022-08-01 
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2022-08-01",
            "name": "[format('{0}/{1}', parameters('vmName'), variables('varExtensionName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            ],
            "properties": {
                "publisher": "[variables('varExtensionPublisher')]",
                "type": "[variables('varExtensionName')]",
                "typeHandlerVersion": "[variables('varExtensionVersion')]",
                "autoUpgradeMinorVersion": true,
                "forceUpdateTag": "1.0",
                "settings": {
                    "maaEndpoint": "[parameters('parMaaEndpoint')]",
                    "maaTenantName": "[variables('varMaaTenantName')]",
                    "ascReportingEndpoint": "[variables('varAscReportingEndpoint')]",
                    "useAlternateToken": "[variables('varUseAlternateToken')]",
                    "disableAlerts": "[variables('varDisableAlerts')]",
                    "EncryptionOperation": "[variables('varEncryptionOperation')]",
                    "KeyVaultURL": "[reference(variables('varKeyVaultResourceID'), '2022-07-01').vaultUri]",
                    "KeyVaultResourceId": "[variables('varKeyVaultResourceID')]",
                    "KeyEncryptionKeyURL": "[parameters('parVmkeyId')]",
                    "KekVaultResourceId": "[variables('varKeyVaultResourceID')]",
                    "KeyEncryptionAlgorithm": "[variables('varKeyEncryptionAlgorithm')]",
                    "VolumeType": "All",
                    "ResizeOSDisk": false
                }
            }
        }
    ]
}